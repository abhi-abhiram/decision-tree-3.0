import {
  MagnifyingGlassIcon,
  ChevronDoubleLeftIcon,
  ChevronDoubleRightIcon,
} from "@heroicons/react/20/solid";
import Head from "next/head";
import Link from "next/link";
import Layout from "~/components/ui/Layout";
import { Textinput } from "~/components/ui/Textinput";
import React from "react";
import { useRouter } from "next/router";
import { cn } from "~/utils";
import { Main } from "~/components/ui/Main";

const data = [
  { label: "Name 1", value: "1" },
  { label: "Name 2", value: "2" },
  { label: "Name 3", value: "3" },
  { label: "Name 4", value: "4" },
  { label: "Name 5", value: "5" },
  { label: "Name 6", value: "6" },
];

export function Nav({
  isShowing,
  setIsShowing,
}: {
  isShowing: boolean;
  setIsShowing: (isShowing: boolean) => void;
}) {
  const [query, setQuery] = React.useState("");

  const filtereddata =
    query === ""
      ? data
      : data.filter((data) =>
          data.label
            .toLowerCase()
            .replace(/\s+/g, "")
            .includes(query.toLowerCase().replace(/\s+/g, ""))
        );

  const router = useRouter();

  return (
    <nav
      className={cn(
        "relative scale-x-100 scroll-m-1 scroll-p-1 overflow-y-auto border-r border-gray-200 bg-white duration-200 ease-in-out",
        isShowing ? "w-72" : "w-0 overflow-hidden p-0"
      )}
    >
      <div className="sticky top-0">
        <div className="relative h-10 bg-white">
          <div className={cn("absolute right-0 top-1 block")}>
            <button
              className={cn(
                "rounded-md p-1 text-gray-400 hover:bg-gray-200 hover:text-gray-500 hover:shadow-sm"
              )}
              onClick={() => {
                setIsShowing(!isShowing);
              }}
            >
              <ChevronDoubleLeftIcon className="h-5 w-5" />
            </button>
          </div>
        </div>
        <div className=" bg-white px-3">
          <Textinput
            leftIcon={<MagnifyingGlassIcon className="h-5 w-5 text-gray-400" />}
            placeholder="Search"
            className="shadow-lg"
            onChange={(event) => setQuery(event.target.value)}
          />
        </div>
        <div className="h-5"></div>
      </div>
      <div className="mb-4 flex flex-col text-gray-600 last:border-b">
        {filtereddata.map((val) => (
          <Link
            href={`/workspace/${val.value}`}
            className={cn(
              "border-t border-gray-300 px-6 py-3 transition-colors duration-200 ease-in-out hover:bg-blue-100 hover:text-blue-600",
              router.query.id === val.value &&
                "bg-blue-600 text-white hover:bg-blue-500 hover:text-white"
            )}
            key={val.value}
          >
            {val.label}
          </Link>
        ))}
      </div>
    </nav>
  );
}

export default function Home() {
  const [isShowing, setIsShowing] = React.useState(true);
  return (
    <Layout>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header className="w-screen border border-gray-200 bg-white">
        <div className="flex h-10 items-center justify-between px-3">
          <div className="flex items-center">
            <button
              className={cn(
                "rounded-md p-1 text-gray-400 transition-opacity duration-200 ease-in-out hover:bg-gray-200 hover:text-gray-500 hover:shadow-sm",
                isShowing ? "pointer-events-none opacity-0" : "opacity-100"
              )}
              onClick={() => {
                setIsShowing(!isShowing);
              }}
            >
              <ChevronDoubleRightIcon className="h-5 w-5" />
            </button>
            <div className="ml-2 text-gray-600">Workspace</div>
          </div>
        </div>
      </header>
      <div className="flex flex-1 overflow-hidden">
        <Nav isShowing={isShowing} setIsShowing={setIsShowing} />
        <Main></Main>
      </div>
    </Layout>
  );
}
